// Generated by: hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package org.phoenixctms.ctsms.domain;

import java.util.Collection;

import org.hibernate.criterion.Restrictions;
import org.phoenixctms.ctsms.util.L10nUtil;
import org.phoenixctms.ctsms.util.L10nUtil.Locales;
import org.phoenixctms.ctsms.vo.StaffTagVO;

/**
 * @see StaffTag
 */
public class StaffTagDaoImpl
		extends StaffTagDaoBase {

	@Override
	protected Collection<StaffTag> handleFindByPersonOrganisationIdExcelTrainingRecord(
			Boolean person, Boolean organisation, Long tagId, Boolean excel, Boolean trainingRecord) throws Exception {
		org.hibernate.Criteria staffTagCriteria = this.getSession().createCriteria(StaffTag.class);
		staffTagCriteria.setCacheable(true);
		if (excel != null) {
			staffTagCriteria.add(Restrictions.eq("excel", excel.booleanValue()));
		}
		if (trainingRecord != null) {
			staffTagCriteria.add(Restrictions.eq("trainingRecord", trainingRecord.booleanValue()));
		}
		if (person != null) {
			if (tagId != null) {
				staffTagCriteria.add(Restrictions.or(Restrictions.eq("person", person.booleanValue()), Restrictions.idEq(tagId.longValue())));
			} else {
				staffTagCriteria.add(Restrictions.eq("person", person.booleanValue()));
			}
		}
		if (organisation != null) {
			if (tagId != null) {
				staffTagCriteria.add(Restrictions.or(Restrictions.eq("organisation", organisation.booleanValue()), Restrictions.idEq(tagId.longValue())));
			} else {
				staffTagCriteria.add(Restrictions.eq("organisation", organisation.booleanValue()));
			}
		}
		return staffTagCriteria.list();
	}

	/**
	 * Retrieves the entity object that is associated with the specified value object
	 * from the object store. If no such entity object exists in the object store,
	 * a new, blank entity is created
	 */
	private StaffTag loadStaffTagFromStaffTagVO(StaffTagVO staffTagVO) {
		StaffTag staffTag = null;
		Long id = staffTagVO.getId();
		if (id != null) {
			staffTag = this.load(id);
		}
		if (staffTag == null) {
			staffTag = StaffTag.Factory.newInstance();
		}
		return staffTag;
	}

	/**
	 * @inheritDoc
	 */
	@Override
	public StaffTag staffTagVOToEntity(StaffTagVO staffTagVO) {
		StaffTag entity = this.loadStaffTagFromStaffTagVO(staffTagVO);
		this.staffTagVOToEntity(staffTagVO, entity, true);
		return entity;
	}

	/**
	 * @inheritDoc
	 */
	@Override
	public void staffTagVOToEntity(
			StaffTagVO source,
			StaffTag target,
			boolean copyIfNull) {
		super.staffTagVOToEntity(source, target, copyIfNull);
	}

	/**
	 * @inheritDoc
	 */
	@Override
	public StaffTagVO toStaffTagVO(final StaffTag entity) {
		return super.toStaffTagVO(entity);
	}

	/**
	 * @inheritDoc
	 */
	@Override
	public void toStaffTagVO(
			StaffTag source,
			StaffTagVO target) {
		super.toStaffTagVO(source, target);
		target.setName(L10nUtil.getStaffTagName(Locales.USER, source.getNameL10nKey()));
	}
}