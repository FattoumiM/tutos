// Generated by: hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package org.phoenixctms.ctsms.domain;

import java.util.Collection;

import org.phoenixctms.ctsms.query.CriteriaUtil;
import org.phoenixctms.ctsms.util.L10nUtil;
import org.phoenixctms.ctsms.util.L10nUtil.Locales;
import org.phoenixctms.ctsms.vo.DepartmentVO;

/**
 * @see Department
 */
public class DepartmentDaoImpl
		extends DepartmentDaoBase {

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Department departmentVOToEntity(DepartmentVO departmentVO) {
		Department entity = this.loadDepartmentFromDepartmentVO(departmentVO);
		this.departmentVOToEntity(departmentVO, entity, true);
		return entity;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void departmentVOToEntity(
			DepartmentVO source,
			Department target,
			boolean copyIfNull) {
		super.departmentVOToEntity(source, target, copyIfNull);
	}

	@Override
	protected Collection<Department> handleFindByVisibleId(Boolean visible, Long departmentId)
			throws Exception {
		org.hibernate.Criteria departmentCriteria = this.getSession().createCriteria(Department.class);
		departmentCriteria.setCacheable(true);
		CriteriaUtil.applyVisibleIdCriterion("visible", departmentCriteria, visible, departmentId);
		return departmentCriteria.list();
	}

	/**
	 * Retrieves the entity object that is associated with the specified value object
	 * from the object store. If no such entity object exists in the object store,
	 * a new, blank entity is created
	 */
	private Department loadDepartmentFromDepartmentVO(DepartmentVO departmentVO) {
		Department department = null;
		Long id = departmentVO.getId();
		if (id != null) {
			department = this.load(id);
		}
		if (department == null) {
			department = Department.Factory.newInstance();
		}
		return department;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DepartmentVO toDepartmentVO(final Department entity) {
		return super.toDepartmentVO(entity);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void toDepartmentVO(
			Department source,
			DepartmentVO target) {
		super.toDepartmentVO(source, target);
		target.setName(L10nUtil.getDepartmentName(Locales.USER, source.getNameL10nKey()));
	}
}