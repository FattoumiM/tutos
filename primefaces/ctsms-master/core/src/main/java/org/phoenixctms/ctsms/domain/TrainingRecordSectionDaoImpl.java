// Generated by: hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge.
// This file is part of the Phoenix CTMS project (www.phoenixctms.org),
// distributed under LGPL v2.1. Copyright (C) 2011 - 2017.
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package org.phoenixctms.ctsms.domain;

import java.util.Collection;

import org.hibernate.criterion.Order;
import org.phoenixctms.ctsms.query.CriteriaUtil;
import org.phoenixctms.ctsms.util.L10nUtil;
import org.phoenixctms.ctsms.util.L10nUtil.Locales;
import org.phoenixctms.ctsms.vo.TrainingRecordSectionVO;

/**
 * @see TrainingRecordSection
 */
public class TrainingRecordSectionDaoImpl
		extends TrainingRecordSectionDaoBase {

	@Override
	protected Collection<TrainingRecordSection> handleFindByVisibleIdSorted(Boolean visible, Long sectionId) throws Exception {
		org.hibernate.Criteria trainingRecordSectionCriteria = this.getSession().createCriteria(TrainingRecordSection.class);
		trainingRecordSectionCriteria.setCacheable(true);
		CriteriaUtil.applyVisibleIdCriterion("visible", trainingRecordSectionCriteria, visible, sectionId);
		trainingRecordSectionCriteria.addOrder(Order.asc("position"));
		return trainingRecordSectionCriteria.list();
	}

	/**
	 * {@inheritDoc}
	 */
	public void toTrainingRecordSectionVO(
			TrainingRecordSection source,
			TrainingRecordSectionVO target) {
		super.toTrainingRecordSectionVO(source, target);
		target.setName(L10nUtil.getTrainingRecordSectionName(Locales.USER, source.getNameL10nKey()));
		target.setDescription(L10nUtil.getTrainingRecordSectionDescription(Locales.USER, source.getDescriptionL10nKey()));
	}

	/**
	 * {@inheritDoc}
	 */
	public TrainingRecordSectionVO toTrainingRecordSectionVO(final TrainingRecordSection entity) {
		return super.toTrainingRecordSectionVO(entity);
	}

	/**
	 * Retrieves the entity object that is associated with the specified value object
	 * from the object store. If no such entity object exists in the object store,
	 * a new, blank entity is created
	 */
	private TrainingRecordSection loadTrainingRecordSectionFromTrainingRecordSectionVO(TrainingRecordSectionVO trainingRecordSectionVO) {
		TrainingRecordSection trainingRecordSection = null;
		Long id = trainingRecordSectionVO.getId();
		if (id != null) {
			trainingRecordSection = this.get(id);
		}
		if (trainingRecordSection == null) {
			trainingRecordSection = TrainingRecordSection.Factory.newInstance();
		}
		return trainingRecordSection;
	}

	/**
	 * {@inheritDoc}
	 */
	public TrainingRecordSection trainingRecordSectionVOToEntity(TrainingRecordSectionVO trainingRecordSectionVO) {
		TrainingRecordSection entity = this.loadTrainingRecordSectionFromTrainingRecordSectionVO(trainingRecordSectionVO);
		this.trainingRecordSectionVOToEntity(trainingRecordSectionVO, entity, true);
		return entity;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public void trainingRecordSectionVOToEntity(
			TrainingRecordSectionVO source,
			TrainingRecordSection target,
			boolean copyIfNull) {
		super.trainingRecordSectionVOToEntity(source, target, copyIfNull);
	}
}