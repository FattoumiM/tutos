// Generated by: hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package org.phoenixctms.ctsms.domain;

import java.util.Collection;

import org.phoenixctms.ctsms.query.CriteriaUtil;
import org.phoenixctms.ctsms.util.L10nUtil;
import org.phoenixctms.ctsms.util.L10nUtil.Locales;
import org.phoenixctms.ctsms.vo.TrialTypeVO;

/**
 * @see TrialType
 */
public class TrialTypeDaoImpl
		extends TrialTypeDaoBase {

	private org.hibernate.Criteria createTrialTypeCriteria() {
		org.hibernate.Criteria trialTypeCriteria = this.getSession().createCriteria(TrialType.class);
		trialTypeCriteria.setCacheable(true);
		return trialTypeCriteria;
	}

	/**
	 * @inheritDoc
	 */
	@Override
	protected Collection<TrialType> handleFindByVisibleId(Boolean visible, Long typeId) {
		org.hibernate.Criteria typeCriteria = createTrialTypeCriteria();
		CriteriaUtil.applyVisibleIdCriterion("visible", typeCriteria, visible, typeId);
		return typeCriteria.list();
	}

	/**
	 * Retrieves the entity object that is associated with the specified value object
	 * from the object store. If no such entity object exists in the object store,
	 * a new, blank entity is created
	 */
	private TrialType loadTrialTypeFromTrialTypeVO(TrialTypeVO trialTypeVO) {
		TrialType trialType = null;
		Long id = trialTypeVO.getId();
		if (id != null) {
			trialType = this.load(id);
		}
		if (trialType == null) {
			trialType = TrialType.Factory.newInstance();
		}
		return trialType;
	}

	/**
	 * @inheritDoc
	 */
	@Override
	public TrialTypeVO toTrialTypeVO(final TrialType entity) {
		return super.toTrialTypeVO(entity);
	}

	/**
	 * @inheritDoc
	 */
	@Override
	public void toTrialTypeVO(
			TrialType source,
			TrialTypeVO target) {
		super.toTrialTypeVO(source, target);
		target.setName(L10nUtil.getTrialTypeName(Locales.USER, source.getNameL10nKey()));
	}

	/**
	 * @inheritDoc
	 */
	@Override
	public TrialType trialTypeVOToEntity(TrialTypeVO trialTypeVO) {
		TrialType entity = this.loadTrialTypeFromTrialTypeVO(trialTypeVO);
		this.trialTypeVOToEntity(trialTypeVO, entity, true);
		return entity;
	}

	/**
	 * @inheritDoc
	 */
	@Override
	public void trialTypeVOToEntity(
			TrialTypeVO source,
			TrialType target,
			boolean copyIfNull) {
		super.trialTypeVOToEntity(source, target, copyIfNull);
	}
}