// Generated by: hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package org.phoenixctms.ctsms.domain;

import org.phoenixctms.ctsms.vo.OpsSystModifierVO;

/**
 * @see OpsSystModifier
 */
public class OpsSystModifierDaoImpl
		extends OpsSystModifierDaoBase {

	/**
	 * Retrieves the entity object that is associated with the specified value object
	 * from the object store. If no such entity object exists in the object store,
	 * a new, blank entity is created
	 */
	private OpsSystModifier loadOpsSystModifierFromOpsSystModifierVO(OpsSystModifierVO opsSystModifierVO) {
		Long id = opsSystModifierVO.getId();
		OpsSystModifier opsSystModifier = null;
		if (id != null) {
			opsSystModifier = this.load(id);
		}
		if (opsSystModifier == null) {
			opsSystModifier = OpsSystModifier.Factory.newInstance();
		}
		return opsSystModifier;
	}

	/**
	 * @inheritDoc
	 */
	@Override
	public OpsSystModifier opsSystModifierVOToEntity(OpsSystModifierVO opsSystModifierVO) {
		OpsSystModifier entity = this.loadOpsSystModifierFromOpsSystModifierVO(opsSystModifierVO);
		this.opsSystModifierVOToEntity(opsSystModifierVO, entity, true);
		return entity;
	}

	/**
	 * @inheritDoc
	 */
	@Override
	public void opsSystModifierVOToEntity(
			OpsSystModifierVO source,
			OpsSystModifier target,
			boolean copyIfNull) {
		super.opsSystModifierVOToEntity(source, target, copyIfNull);
	}

	/**
	 * @inheritDoc
	 */
	@Override
	public OpsSystModifierVO toOpsSystModifierVO(final OpsSystModifier entity) {
		return super.toOpsSystModifierVO(entity);
	}

	/**
	 * @inheritDoc
	 */
	@Override
	public void toOpsSystModifierVO(
			OpsSystModifier source,
			OpsSystModifierVO target) {
		super.toOpsSystModifierVO(source, target);
	}
}