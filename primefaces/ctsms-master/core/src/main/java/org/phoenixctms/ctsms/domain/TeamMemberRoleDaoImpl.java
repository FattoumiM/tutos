// Generated by: hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package org.phoenixctms.ctsms.domain;

import java.util.Collection;

import org.phoenixctms.ctsms.query.CriteriaUtil;
import org.phoenixctms.ctsms.util.L10nUtil;
import org.phoenixctms.ctsms.util.L10nUtil.Locales;
import org.phoenixctms.ctsms.vo.TeamMemberRoleVO;

/**
 * @see TeamMemberRole
 */
public class TeamMemberRoleDaoImpl
		extends TeamMemberRoleDaoBase {

	/**
	 * @inheritDoc
	 */
	@Override
	protected Collection<TeamMemberRole> handleFindByVisibleId(Boolean visible, Long roleId) {
		org.hibernate.Criteria roleCriteria = this.getSession().createCriteria(TeamMemberRole.class);
		roleCriteria.setCacheable(true);
		CriteriaUtil.applyVisibleIdCriterion("visible", roleCriteria, visible, roleId);
		return roleCriteria.list();
	}

	/**
	 * Retrieves the entity object that is associated with the specified value object
	 * from the object store. If no such entity object exists in the object store,
	 * a new, blank entity is created
	 */
	private TeamMemberRole loadTeamMemberRoleFromTeamMemberRoleVO(TeamMemberRoleVO teamMemberRoleVO) {
		TeamMemberRole teamMemberRole = null;
		Long id = teamMemberRoleVO.getId();
		if (id != null) {
			teamMemberRole = this.load(id);
		}
		if (teamMemberRole == null) {
			teamMemberRole = TeamMemberRole.Factory.newInstance();
		}
		return teamMemberRole;
	}

	/**
	 * @inheritDoc
	 */
	@Override
	public TeamMemberRole teamMemberRoleVOToEntity(TeamMemberRoleVO teamMemberRoleVO) {
		TeamMemberRole entity = this.loadTeamMemberRoleFromTeamMemberRoleVO(teamMemberRoleVO);
		this.teamMemberRoleVOToEntity(teamMemberRoleVO, entity, true);
		return entity;
	}

	/**
	 * @inheritDoc
	 */
	@Override
	public void teamMemberRoleVOToEntity(
			TeamMemberRoleVO source,
			TeamMemberRole target,
			boolean copyIfNull) {
		super.teamMemberRoleVOToEntity(source, target, copyIfNull);
	}

	/**
	 * @inheritDoc
	 */
	@Override
	public TeamMemberRoleVO toTeamMemberRoleVO(final TeamMemberRole entity) {
		return super.toTeamMemberRoleVO(entity);
	}

	/**
	 * @inheritDoc
	 */
	@Override
	public void toTeamMemberRoleVO(
			TeamMemberRole source,
			TeamMemberRoleVO target) {
		super.toTeamMemberRoleVO(source, target);
		target.setName(L10nUtil.getTeamMemberRoleName(Locales.USER, source.getNameL10nKey()));
	}
}