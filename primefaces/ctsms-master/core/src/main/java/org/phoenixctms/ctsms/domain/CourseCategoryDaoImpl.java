// Generated by: hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package org.phoenixctms.ctsms.domain;

import java.util.Collection;

import org.phoenixctms.ctsms.query.CriteriaUtil;
import org.phoenixctms.ctsms.util.L10nUtil;
import org.phoenixctms.ctsms.util.L10nUtil.Locales;
import org.phoenixctms.ctsms.vo.CourseCategoryVO;

/**
 * @see CourseCategory
 */
public class CourseCategoryDaoImpl
		extends CourseCategoryDaoBase {

	/**
	 * @inheritDoc
	 */
	@Override
	public CourseCategory courseCategoryVOToEntity(CourseCategoryVO courseCategoryVO) {
		CourseCategory entity = this.loadCourseCategoryFromCourseCategoryVO(courseCategoryVO);
		this.courseCategoryVOToEntity(courseCategoryVO, entity, true);
		return entity;
	}

	/**
	 * @inheritDoc
	 */
	@Override
	public void courseCategoryVOToEntity(
			CourseCategoryVO source,
			CourseCategory target,
			boolean copyIfNull) {
		super.courseCategoryVOToEntity(source, target, copyIfNull);
	}

	/**
	 * @inheritDoc
	 */
	@Override
	protected Collection<CourseCategory> handleFindByVisibleId(Boolean visible, Long categoryId) {
		org.hibernate.Criteria categoryCriteria = this.getSession().createCriteria(CourseCategory.class);
		categoryCriteria.setCacheable(true);
		CriteriaUtil.applyVisibleIdCriterion("visible", categoryCriteria, visible, categoryId);
		return categoryCriteria.list();
	}

	/**
	 * Retrieves the entity object that is associated with the specified value object
	 * from the object store. If no such entity object exists in the object store,
	 * a new, blank entity is created
	 */
	private CourseCategory loadCourseCategoryFromCourseCategoryVO(CourseCategoryVO courseCategoryVO) {
		CourseCategory courseCategory = null;
		Long id = courseCategoryVO.getId();
		if (id != null) {
			courseCategory = this.load(id);
		}
		if (courseCategory == null) {
			courseCategory = CourseCategory.Factory.newInstance();
		}
		return courseCategory;
	}

	/**
	 * @inheritDoc
	 */
	@Override
	public CourseCategoryVO toCourseCategoryVO(final CourseCategory entity) {
		return super.toCourseCategoryVO(entity);
	}

	/**
	 * @inheritDoc
	 */
	@Override
	public void toCourseCategoryVO(
			CourseCategory source,
			CourseCategoryVO target) {
		super.toCourseCategoryVO(source, target);
		target.setName(L10nUtil.getCourseCategoryName(Locales.USER, source.getNameL10nKey()));
		//target.setDescription(L10nUtil.getCourseCategoryDescription(Locales.USER, source.getDescriptionL10nKey()));
	}
}